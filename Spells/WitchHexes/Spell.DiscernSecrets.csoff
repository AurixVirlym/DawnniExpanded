using Dawnsbury.Core.CharacterBuilder.FeatsDb.Common;
using Dawnsbury.Core.CharacterBuilder.FeatsDb.Spellbook;
using Dawnsbury.Core.Mechanics.Enumerations;
using Dawnsbury.Core.Mechanics.Targeting;
using Dawnsbury.Core.Mechanics.Targeting.Targets;
using Dawnsbury.Display.Text;
using Dawnsbury.Modding;
using Dawnsbury.Audio;
using Microsoft.Xna.Framework;
using Dawnsbury.Display.Illustrations;
using Dawnsbury.Core.CombatActions;
using Dawnsbury.Core.CharacterBuilder.Spellcasting;
using Dawnsbury.Core.Mechanics.Treasure;
using Dawnsbury.Core.Creatures;
using System.Runtime.Serialization.Formatters;
using Dawnsbury.Core.Mechanics.Core;
using System.ComponentModel;
using Dawnsbury.Core.Mechanics;
using Microsoft.VisualBasic;
using Dawnsbury.Core;
using Dawnsbury.Core.Possibilities;
using System;
using Dawnsbury.Core.Roller;
using Dawnsbury.Core.Intelligence;

namespace Dawnsbury.Mods.DawnniExpanded;


public class SpellDiscernSecrets
{
    public static ModdedIllustration Spellillustration = new ModdedIllustration("DawnniburyExpandedAssets/DiscernSecrets.png");
    public static SpellId Id;
    public static CombatAction MakeSpell(Creature caster, int spellLevel, bool inCombat)
    {
        {

            CombatAction SpellAction = Spells.CreateModern(Spellillustration,
                "Discern Secrets",
            new[] { Trait.Cantrip, Trait.Uncommon, Witch.HexTrait, Trait.Divination, DawnniExpanded.DETrait, Trait.SpellCannotBeChosenInCharacterBuilder },
                    "You call upon your patron's power to better uncover secrets.",
                    "When you Cast the Spell, the target can Recall Weakness. The target gains a +2 status bonus to the Recall Weakness check, and this bonus remains as long as you Sustain the Spell."
                    ,
                    Target.RangedFriend(6),
                        spellLevel,
                        null
                        ).WithActionCost(1)
                        .WithSoundEffect(SfxName.OpenPage)
                        .WithEffectOnEachTarget((Delegates.EffectOnEachTarget)(async (spell, caster, target, result) =>
                        {

                            QEffect qeffectDiscernSecrets = new QEffect()
                            {
                                BonusToSkillChecks = (skill, action, target) => action.ActionId == FeatRecallWeakness.ActionID ? new Bonus(2, BonusType.Status, "Discern Secrets") : (Bonus)null,
                                CannotExpireThisTurn = true,
                                ExpiresAt = ExpirationCondition.ExpiresAtEndOfSourcesTurn,
                                Source = caster,
                                Illustration = Spellillustration,
                                Name = "Discern Secrets",
                                Description = "You have a +2 status bonus to Recall Weakness checks."
                            };

                            target.AddQEffect(qeffectDiscernSecrets);
                            caster.AddQEffect(SpellHexes.NamedSustaining(spell, qeffectDiscernSecrets));

                            TBattle battle = target.Battle;

                            await battle.GameLoop.FullCast(FeatRecallWeakness.RecallWeaknessAction(target));

                            caster.AddQEffect(SpellHexes.HexOnceEffect());

                        }));


            return SpellAction;


        }
    }
    public static void LoadMod()
    {


        Id = ModManager.RegisterNewSpell("Discern Secrets", 0, (spellId, spellcaster, spellLevel, inCombat, SpellInformation) => MakeSpell(spellcaster, spellLevel, inCombat)
        );

    }
}


